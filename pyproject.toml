[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "reer-dspy-mlx-social"
version = "0.1.0"
description = "REER × DSPy × MLX Social Posting Pack - AI-powered social media content generation and posting"
authors = [
    {name = "REER Team", email = "team@reer.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["dspy", "mlx", "social-media", "ai", "content-generation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "dspy-ai>=2.4.0",
    "mlx>=0.19.0",
    "mlx-lm>=0.17.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.27.0",
    "aiohttp>=3.9.0",
    "python-dotenv>=1.0.0",
    "typer>=0.12.0",
    "rich>=13.0.0",
    "loguru>=0.7.0",
    "schedule>=1.2.0",
    "jinja2>=3.1.0",
    "pillow>=10.0.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "black>=24.0.0",
    "ruff>=0.6.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipython>=8.20.0",
    "jupyter>=1.0.0",
]
social = [
    "tweepy>=4.14.0",
    "facebook-sdk>=3.1.0",
    "instagram-basic-display-api>=1.0.0",
    "linkedin-api>=2.0.0",
    "discord.py>=2.3.0",
    "slack-sdk>=3.26.0",
]
cloud = [
    "boto3>=1.34.0",
    "google-cloud-storage>=2.14.0",
    "azure-storage-blob>=12.19.0",
]

[project.urls]
Homepage = "https://github.com/reer-team/reer-dspy-mlx-social"
Documentation = "https://reer-dspy-mlx-social.readthedocs.io"
Repository = "https://github.com/reer-team/reer-dspy-mlx-social"
"Bug Tracker" = "https://github.com/reer-team/reer-dspy-mlx-social/issues"

[project.scripts]
reer-social = "tools.cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "plugins*", "dspy_program*", "social*", "schemas*", "tools*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.toml", "*.txt", "*.md"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["B011"]

[tool.ruff.lint.isort]
known-first-party = ["core", "plugins", "dspy_program", "social", "schemas", "tools"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dspy.*",
    "mlx.*",
    "tweepy.*",
    "facebook.*",
    "instagram_basic_display.*",
    "linkedin_api.*",
    "discord.*",
    "slack_sdk.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["core", "plugins", "dspy_program", "social", "schemas", "tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]